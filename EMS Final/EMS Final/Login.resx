<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNi
        coIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz
        9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAEC
        dwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpD
        REVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
        tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A/VOi
        isbxD4i07wnot5rGr3cOn6ZZRPcXNzcNtSJF5ZjT1eiGk3ojQuLiO1heWR1SFF3M7ttVVr5K+NX/AAUK
        8KeC5pdM8GWv/CYaonyPd+b5VhE3+/8Ael/4B8n+3Xy5+05+1xrfx2vrjStJe40bwKjfurH7k17/ALdx
        /wDGa+fa+2wGQxsqmL3/AJf8z3sPl2nNV+7/ADPZ/HX7Ynxb+IDTef4vutFs2+5Z+H/9BVP+Br++/wDH
        68n1LxHrGuPv1LWL/UX/AL95dPN/6HWp4H+G/ir4l3z2XhbQL7Xblfv/AGSL5Iv99/uJ/wADr33QP+Cd
        fxW1aHzr6bQdE3/8sbq9eWT/AMhI6/8Aj9fROpgsD7rcYfdc9Byo0NG0j5u03xBquhvv0zU7/Tn/AOnO
        6eH/ANAevVvAf7X3xc+Hrw/ZvGF5rVmv37PxB/pyP/wN/wB9/wB8PXf61/wTl+Kunw77G98O6t/sQ3ss
        L/8Aj8NeEfEL4S+MvhZcpD4s8NX+i7n2LNNFvtm/3Jk+R/8AvulGrgsd7icZ39L/AHf8BkxlQrrlTT+7
        9T74+Cv/AAUK8K+NJrfSvG1qvg/VZP3aXnm77CVv9770X/A/l/26+uIZ0nhWWJlkR13Ky/xV+EVfR37L
        f7YOq/BG+tNB8QSz6v4Ed9jw/fm0z/bh/wBj+/F/3x/t/O5hkSs6mE/8B/yPPxGX6c1L7j9VaKy9H1qx
        8Q6Taalp13Fe6fdRLNBcW7B0lRvusrfStSvidtzwvUK/O7/goh8cJtW8Qw/DPS5wmnafsvNXMbf624+/
        DD/wBdr/AO+6f3K/QTUL+HTbOa6nbZDbxvM/+6vNfiH4s8Sz+NvFOr+Ibpt1xqt7LeMG/wBt99fTZDhl
        VrurL7H5v+mz2sroe0qOb+yYvl19ffsq/sOv8QLOz8X+P0ls/D8v76z0dG2TXqf3pX+8kX/j7f7H8fnv
        7HXwRg+NHxbhTVLfzvDmgomo36P9yV9/7mF/9903/wC6j1+sipsX5a9bOcynQf1eg7S6vt6eZ25jipUX
        7Gm9epkeG/DeleEdHt9K0awttL063XbFZ2cKxRoPZRW1RRXwm+rPmW29WFZmr6NZeINNuNP1C1hvbK4T
        ZNb3Eauki/3WU9a06KLtbC80fnj+1Z+w6nhm0vPF/wAOIJH06JfNv/Dw+d7ded8tt/G64H+p/wC+P7lf
        FSbHT5XV0r94JK/LL9uL4EwfCX4nJq+kweV4c8TbriKJF+SC4T/XRf7vzo6f77/3K+4ybM5VX9Wru76P
        9D6bLsW6r9jUevT/ACPS/wDgnb8dprXVJ/hhrNwz2cqPeaG7t/qn+/Nb/wDAvndP9yav0Fr8QPA3iq48
        B+NtB8R2z7JtJvYbz/gCP86f98b0r9uLe4S4tkli+467lrys9w0aOIVWP2/zW5x5ph1Rqqa+0c38Uf8A
        kmvi3/sE3f8A6JavxQhj/cp/uV+1/wAUv+SaeLP+wTd/+iWr8WYY/wByn+5Xdw/LlhU+R7GQQ5o1Pkfo
        f/wTZ0GKx+EviPV9v+kahrTRb/8AplFDFtT/AL7eU/8AAq+wq+V/+Cd//JA7r/sOXf8A6BFX1RXzuYSc
        sXVb7nzuYX+t1F5hRRRXnnnhRRRQAV8rf8FEtEg1L4CpfyKPN0vVrWeNu/z7oW/SU19U181/t9f8m26x
        /wBf9l/6PWu/ANxxVNrujvwF/rVJLuvzPy2vI/8AQ5v9x6/cfw38vh/S1/6dYv8A0AV+IN5H/oc3+49f
        t/4d/wCQDpv/AF6xf+gCvoc/leNL5/ofQ5/DljS9X+hyHxv8SaV4Y+Fnie61bULbTLaTT7i3Se4lCKZX
        idVRT/er8b0voo0T5Gr0f9pf416r8bvidqt9c3Df2FZXEttpNijfuYrdH2I/++/33/39n8FeU17OV5a8
        LSvUfvSs/TyLy72uCptR3kfWn7Mv7Z3hz4DfDmbw3qfh3WdUuGv5bzzbAQ7Arony/O6f3a9f/wCHnngv
        /oSfE/8A31af/Hq/Oyit6mTYOrN1Jxd35syrYWnXqSqzWr1Z+if/AA888F/9CT4n/wC+rT/49R/w888F
        /wDQk+J/++rT/wCPV+dlFZ/2Hgf5X97Mf7Po/wAv4n6J/wDDzzwX/wBCT4n/AO+rT/49R/w888F/9CT4
        n/76tP8A49X52UUf2Hgf5X97D+z6P8v4n6J/8PPPBf8A0JPif/vq0/8Aj1eWftGftueGvjd8LLzwrpvh
        vW9Puri4t5lmvvs+z5HD/wAL+1fH9FaU8mwVOSnGLuvNmtLB06M1UgtVqi5NdJJbTJs++lfsr8Ifih4U
        +KXhWzuvC+s2urJbxpFOkL/vYH2D5XRvmX8a/F6uj+HnxE1z4VeL7DxJ4dumttRtH+5v+S4X+OGb++j1
        GY5XHGQXK7SV7dvQ3zCNTHwSm9Y3t87b/cc8/wB9/wDfptTPH87/AO/Rsr2eZHoezIaKm2UbKOZB7Mho
        rU8P6DeeKNd07SNNga51HUJ0t4Il/ild9if/ALdfpl8If2Fvh34F0GFPEmkWvjTXXjX7Teaonm24b+7D
        CfkRP/Hq83G5lRwKTqat9FucOJr08Klz7voflz5dFfqB8Zf2E/AXjfQ538J6Ta+DtfRP9GmsfktHb+7L
        D93b0+ZAH5r8ztR0u60fVLzT72BrW+sbh7aeF/8AllKj7HT/AL7p4LMKOOi3T0a3THhq9LFJ8m6KFFTb
        KNlejzI7fZkNFTbKNlHMg9mWXj+d/wDfo8irLx/O/wDv0zy64vaHvewIfLo8ipvLo8uj2gewPTf2U9Ss
        tD/aS+Ht3fyqln/aDw73/vy200MP/kV0r9fV+6lfhr5f+3s/20r9Bv2Nf2qvEfxS1geB/ElnFfalZ6ZJ
        eR65G+x5liaFNkqbQN/7376/9818tnWHlWtXjtFWf3/8E+VzvL6korEw2itf8z7Fb7lfjr+0dqtl4g+P
        nj6+01laxfV5UVkXO50+R3/77R6+x/23P2kvE3wvurfwZ4dSPTrjVbD7RLrRk/fRIzumyFf4W+X7/wDL
        71fnukflpsWjJcPKknXk/iWg8jwE4xeJntJaehD5dHkVN5dHl19T7Q+p9gQ+RR5dTeXR5dHtA9gXHg+d
        /wDfo8ir7Q/O/wDv0zya8r2h9j9R8in5FHkVc8mjyaPaD+peRT8ivpT/AIJ7x+X+0Nc/9i9df+jravnf
        ya2PDPibWvBepPqGg6rdaRfvE8P2mzl8l9j/AMH/AI4lY1n7WnKCe6OLG5XLEYapRho5Jo+if+CjEfmf
        F/Qf+wEn/pTNXyl5FdN4p8Wa542vIbrxBq95rVxEvkrNfSvK6L/crF8mow37mlGm3exGX5TPCYWnQnq4
        rcp+RR5FXPJo8mun2h6H1LyKfkUeRVzyaPJo9oH1LyOq8beErrwX4y1vw/exMlzp97NbPv8A403/ACP/
        AMDTY/8AwOsfyK/Tj48fs3eGvjFa/bbhn0nX7WHbFqlqoLMmPuSKTh146Gvzo8VaEfCvjBtAedbtl6XK
        xlB/3yzMf/Hq+bpYr2kbvc9HhjNsLxBQUYaVY2Uk9r23T2s/vOe8ijyKveUP8ineUP8AIrf2x9n9SRn+
        RR5FaHlD/Io8of5FHtg+pIz/ACKPIrQ8of5FHlD/ACKPbB9SRn+RR5FXvKH+RR5Q/wAij2wfUkUfIo8l
        mZFjilmlZtkUMK73Z/4ESr6qf7WiseMs3MmOD/wHpX3t+zr+y14b8Dx2Hi2/nbxDrjKrWz3EQjhtdxA3
        JGCcvz94kn021nUxSpq7R87xDjsNw5hlXxKbctIpfafrsvV/K5//2Q==
</value>
  </data>
</root>